name: AdbeUnitTests-Api26

on:
  schedule:
    - cron: '0 0 * * 0'  # Sunday midnight UTC
  pull_request:
    branches: [master, main]
    paths:
      - '.github/workflows/adbe-unittests-api26.yml'

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  testOnApi26:
    # This hangs on ubuntu-latest
    # Ref: https://github.com/ashishb/adb-enhanced/pull/239
    # Ref: https://github.com/ReactiveCircus/android-emulator-runner/issues/385
    runs-on: macos-13  # X86-based as macOS 14 onwards is ARM-based
    timeout-minutes: 15

    strategy:
      matrix:
        api-level: [26]
        target: [default]  # Other option: google_apis

    steps:
      - name: checkout
        uses: actions/checkout@v4

      - name: Gradle cache
        uses: gradle/gradle-build-action@v3

      - name: AVD cache
        uses: actions/cache@v4
        id: avd-cache
        with:
          path: |
            ~/.android/avd/*
            ~/.android/adb*
          key: avd-${{ runner.os }}-${{ matrix.api-level }}

      - name: Create AVD and generate snapshot for caching
        if: steps.avd-cache.outputs.cache-hit != 'true'
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: ${{ matrix.api-level }}
          force-avd-creation: false
          emulator-options: -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none
          disable-animations: false
          script: echo "Generated AVD snapshot for caching."

      - name: Run tests
        uses: reactivecircus/android-emulator-runner@v2
        env:
          # Ref: https://github.com/ReactiveCircus/android-emulator-runner/issues/385
          ANDROID_EMULATOR_WAIT_TIME_BEFORE_KILL: 60
        with:
          api-level: ${{ matrix.api-level }}
          force-avd-creation: false
          emulator-options: -no-snapshot-save -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -no-metrics -camera-back none
          disable-animations: true
          target: ${{ matrix.target }}
          script: |
            python3 -m pip install --upgrade pip
            python3 -m pip install --user -r requirements.txt
            make test_python3
